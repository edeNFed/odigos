apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: multi-apps
spec:
  description: This e2e test install Odigos via helm chart on custom namespace
  skipDelete: true
  steps:
  - name: Prepare destination
    try:
    - script:
        content: |
          helm repo add grafana https://grafana.github.io/helm-charts
          helm install e2e-tests grafana/tempo -n traces --create-namespace
    - assert:
        file: assert-tempo-running.yaml
  - name: Install Odigos
    try:
    - script:
        content: |
          git clone https://github.com/odigos-io/odigos-charts.git /tmp/odigos-charts
          cd /tmp/odigos-charts/charts && helm install odigos ./odigos --create-namespace --namespace odigos-test-ns --set image.tag=e2e-test
          kubectl label namespace odigos-test-ns odigos.io/system-object="true"
        timeout: 60s
  - name: Verify Odigos Installation
    try:
    - script:
        content: |
          export ACTUAL_VERSION=$(../../../cli/odigos version --cluster)
          if [ "$ACTUAL_VERSION" != "e2e-test" ]; then
            echo "Odigos version is not e2e-test, got $ACTUAL_VERSION"
            exit 1
          fi
    - assert:
        file: assert-odigos-installed.yaml
  - name: Install Demo App
    try:
    - script:
        timeout: 100s
        content: |
          docker pull keyval/odigos-demo-inventory:v0.1
          docker pull keyval/odigos-demo-membership:v0.1
          docker pull keyval/odigos-demo-coupon:v0.1
          docker pull keyval/odigos-demo-inventory:v0.1
          docker pull keyval/odigos-demo-frontend:v0.2
          kind load docker-image keyval/odigos-demo-inventory:v0.1
          kind load docker-image keyval/odigos-demo-membership:v0.1
          kind load docker-image keyval/odigos-demo-coupon:v0.1
          kind load docker-image keyval/odigos-demo-inventory:v0.1
          kind load docker-image keyval/odigos-demo-frontend:v0.2
    - apply:
        file: 02-install-simple-demo.yaml
    - assert:
        file: assert-apps-installed.yaml
  - name: Detect Languages
    try:
    - apply:
        file: 03-instrument-ns.yaml
    - assert:
        file: assert-runtime-detected.yaml
  - name: Add Destination
    try:
    - apply:
        file: 04-add-destination.yaml
    - assert:
        file: assert-instrumented-and-pipeline.yaml
  # TODO(edenfed): If we send a trace as soon as apps are running,
  # it is not generated by JS instrumentation (May be related to OpAMP)
  # Remove this sleep once we fix the issue.
  - name: Wait for apps to stabilize
    try:
    - sleep:
        duration: 5s
  - name: Generate Traffic
    try:
      - create:
          file: 05-generate-traffic.yaml
      - assert:
          file: assert-traffic-job-running.yaml
          timeout: 20s
  - name: Wait for traces
    try:
    - script:
        timeout: 60s
        content: |
          while true; do
            ../../common/traceql_runner.sh tracesql/wait-for-trace.yaml
            if [ $? -eq 0 ]; then
              break
            fi
            sleep 3
          done
    catch:
    - podLogs:
        name: frontend
        namespace: default
  - name: Verify Trace - Context Propagation
    try:
    - script:
        content: |
          ../../common/traceql_runner.sh tracesql/context-propagation.yaml
    catch:
    - podLogs:
        name: odiglet
        namespace: odigos-system
  - name: Verify Trace - Resource Attributes
    try:
    - script:
        content: |
          ../../common/traceql_runner.sh tracesql/resource-attributes.yaml
    catch:
    - podLogs:
        name: odiglet
        namespace: odigos-system
  - name: Verify Trace - Span Attributes
    try:
      - script:
          content: |
            ../../common/traceql_runner.sh tracesql/span-attributes.yaml
    catch:
      - podLogs:
          name: odiglet
          namespace: odigos-system
